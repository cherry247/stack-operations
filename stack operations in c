#include<stdio.h>
struct stack
{
    int size;
    int top;
    int *s;
};
void create(struct stack *stk)
{
    stk->size=5;
    stk->top=-1;
    stk->s=(int*)malloc(stk->size*sizeof(int));
}
void push(struct stack *stk,int y)
{
    if(stk->top==stk->size-1)
        printf("overflow");
    else
    {

            stk->top++;
        stk->s[stk->top]=y;
    }


}
void pop(struct stack *stk)
{
    int a=-1;
    if(stk->top<0)
    {
        printf("underflown");
    }
    else
    {
        a=stk->s[stk->top];
        stk->top--;
    }

}
int peek(struct stack stk,int g)
{
    int s=-1;
      s=stk.s[stk.top-g+1];
    return s;
}
void display(struct stack stk)
{
    int i;
    for(i=stk.top;i>=0;i--)
    {
        printf("%d",stk.s[i]);
        printf("\n");
    }
}
void main()
{    int z;
    struct stack stk;
    create(&stk);
    push(&stk,10);
    push(&stk,20);
    push(&stk,30);
    push(&stk,40);
    push(&stk,50);
    pop(&stk);
    z=peek(stk,3);
    printf(" peeker is%d\n",z);
    display(stk);

}
